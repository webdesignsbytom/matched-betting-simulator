generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  DEVELOPER
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  password       String
  role           Role      @default(USER)
  profile        Profile?
  createdEvents  Event[]   @relation("createdEvents")
  receivedEvents Event[]   @relation("receivedEvents")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt
}

model Profile {
  id        String    @id @default(uuid())
  username  String    @unique
  userId    String    @unique
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

// EVENTS
enum EventType {
  ERROR
  USER
  ADMIN
  VISITOR
  DEVELOPER
  PURCHASE
  MINING
  TEST
}

model Event {
  id           String    @id @default(uuid())
  type         EventType
  topic        String?
  code         Int?
  content      String?
  createdBy    User?     @relation("createdEvents", fields: [createdById], references: [id], onDelete: Cascade)
  createdById  String?
  receivedBy   User?     @relation("receivedEvents", fields: [receivedById], references: [id], onDelete: Cascade)
  receivedById String?
  viewed       Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
}
